#include <vector>
#include <iostream>

using namespace std;

void drawBoard(const vector < char >&gameBoard) {
   
   for (int i = 0; i < 9; i += 3) {
      cout << "  " << gameBoard.at(i) << "  |  " << gameBoard.at(i + 1) << "  |  "
         << gameBoard.at(i + 2) << "  " << endl;
      if (i < 6) {
         cout << "-----|-----|-----" << endl;
      }
   }
   cout << endl;
    
   return;
}

void initVector(vector <char> &v) {
   unsigned int i;
    for(i=0; i<v.size(); ++i){
       v.at(i)='a'+i;
    }
   return;
}

int convertPosition(char boardPosition) {
   int num;
   num=static_cast<int>(boardPosition-'a');
   return num;
}

bool validPlacement(const vector<char>  &gameBoard, int positionIndex) {
   bool ifAvailable=false;
   if(gameBoard.at(positionIndex)=='a'+positionIndex){
      ifAvailable=true;
   }
   return ifAvailable;
}

int getPlay(const vector<char> &gameBoard) {
   unsigned int index;
   
   char boardPosition=' ';
    
   cout << "Please choose a position: "<<endl;
   cin>>boardPosition;
   
   index=convertPosition(boardPosition);
   while(index>gameBoard.size()-1){
      cout << "Please choose a position: "<<endl;
      cin>>boardPosition;
      
      index=convertPosition(boardPosition);
   }
   while(validPlacement(gameBoard, index)!=true){
      cout << "Please choose a position: "<<endl;
      cin>>boardPosition;
      
      index=convertPosition(boardPosition);
   }
   
   return index;
}

bool gameWon(const vector<char> &gameBoard) {
   bool output=false;
   unsigned int i;
   
   //horizontal
   for(i=0; i<gameBoard.size(); i=i+3){
      if(gameBoard.at(i)==gameBoard.at(i+1)&& gameBoard.at(i)==gameBoard.at(i+2)){
         output=true;
      }
   }
   //vertical
   for(i=0; i<3; ++i){
      if(gameBoard.at(i)==gameBoard.at(i+3)&& gameBoard.at(i)==gameBoard.at(i+6)){
         output=true;
      }
   }
   //diagonal
   if(gameBoard.at(0)==gameBoard.at(4)&& gameBoard.at(0)==gameBoard.at(8)){
      output=true;
   }
   else if(gameBoard.at(2)==gameBoard.at(4)&& gameBoard.at(2)==gameBoard.at(6)){
      output=true;
   }
   
   return output;
}

bool boardFull(const vector<char> &gameBoard) {
   bool output=false;
   unsigned int i;
   int count=0;
   
   for(i=0; i<gameBoard.size(); ++i){
      if(gameBoard.at(i)=='X'||gameBoard.at(i)=='O'){
         ++count;
      }
   }
   if(count==9){
      output=true;
   }
   
   return output;
}


const int PLAYER1 = 0;
const int PLAYER2 = 1;

int main() {
   
   vector<char> gameBoard(9);
   int whosTurn = PLAYER1; 
   
   initVector(gameBoard);
   drawBoard(gameBoard);
   
   while(gameWon(gameBoard)==false && boardFull(gameBoard)==false){
      
      if(whosTurn==PLAYER1){
         gameBoard.at(getPlay(gameBoard))='X';
         drawBoard(gameBoard);
         cout<<endl;
         whosTurn+=1;
      }
      else if(whosTurn==PLAYER2){
         gameBoard.at(getPlay(gameBoard))='O';
         drawBoard(gameBoard);
         cout<<endl;
         whosTurn-=1;
      }
      gameWon(gameBoard);
   }
   
   if(boardFull(gameBoard)==true && gameWon(gameBoard)==false){
      cout<<"No one wins"<<endl;
   }
   if(gameWon(gameBoard)){
      if(whosTurn==1){
         cout<<"Player 1 Wins!!"<<endl;
      }
      if(whosTurn==0){
         cout<<"Player 2 Wins!!"<<endl;
      }
   }

   return 0;
}
